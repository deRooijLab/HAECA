##### Senescence Marker Analysis Across Tissues
#Description: This script identifies senescence-associated markers across tissues and HAECA_IDs in a Seurat object.
#Results are written to tissue-specific CSV files.
#Required: "HUVEC_young_vs_aged.csv"

# Load required libraries
library(Seurat)
library(dplyr)
library(ggplot2)

# Set directories
data_dir <- "path_to_.RDS"
setwd(data_dir)
output_dir <- "path_to_output_directory""
if(!dir.exists(output_dir)){dir.create(output_dir, recursive = T)}

#loaded global HAECA (to be released from https://zenodo.org/records/16779452 upon publication)
data <- readRDS("/path_to_HAECA_global.RDS")
data #21979 features across 375829 samples within 2 assays 

# ---- Configuration ----
DefaultAssay(data) <- "RNA"

min_sen_cells <- 50              # minimum senescent cells per HAECA_ID
marker_freq_threshold <- 0.65    # fraction of HAECA_IDs required for marker inclusion
tissue_threshold <- 7            # minimum tissues where gene must appear

# ---- Helper Functions ----

# Annotate senescent cells based on CDKN1A expression
annotate_senescence <- function(obj, gene = "CDKN1A", threshold = 0) {
  expr <- FetchData(obj, vars = gene)[, 1]
  obj$sen <- ifelse(expr > threshold, "yes", "no")
  return(obj)
}

# Filter markers that appear in >= threshold proportion of HAECA_IDs
filter_by_freq <- function(marker_df, n_ids, threshold = marker_freq_threshold) {
  counts <- table(marker_df$gene)
  sig_genes <- names(counts[counts >= threshold * n_ids])
  marker_df[marker_df$gene %in% sig_genes, ]
}

# ---- Main Analysis ----

tissues <- unique(data$Tissue)

for (tissue in tissues) {
  message("Processing tissue: ", tissue)
  
  # Subset by tissue
  Idents(data) <- "Tissue"
  tissue_data <- subset(data, idents = tissue)
  Idents(tissue_data) <- "HAECA_ID"
  
  significant_markers_list <- list()
  
  # Loop over HAECA_IDs
  for (haeca_id in unique(tissue_data$HAECA_ID)) {
    message("  Processing HAECA_ID: ", haeca_id)
    
    # Subset and annotate senescence
    tissue_data_sub <- subset(tissue_data, idents = haeca_id)
    tissue_data_sub <- annotate_senescence(tissue_data_sub, gene = "CDKN1A")
    
    # Skip if insufficient senescent cells
    num_sen_cells <- sum(tissue_data_sub$sen == "yes")
    if (num_sen_cells < min_sen_cells) {
      message("    Skipping ", haeca_id, " - insufficient senescent cells.")
      next
    }
    
    # Marker analysis (senescent vs non-senescent)
    Idents(tissue_data_sub) <- "sen"
    markers_sen <- FindMarkers(
      tissue_data_sub, ident.1 = "yes",
      min.pct = 0.1, only.pos = TRUE
    )
    markers_sen$gene <- rownames(markers_sen)
    
    significant_markers_list[[haeca_id]] <- markers_sen
  }
  
  # ---- Aggregate Results ----
  if (length(significant_markers_list) == 0) {
    message("No significant markers found for ", tissue)
    next
  }
  
  combined_markers <- do.call(rbind, significant_markers_list) %>%
    subset(p_val < 0.05)
  
  n_ids <- length(unique(tissue_data$HAECA_ID))
  markers_filtered <- filter_by_freq(combined_markers, n_ids)
  
  # Save tissue marker results
  write.csv(
    markers_filtered,
    file = file.path(output_dir, paste0(tissue, "_markers_enriched_65percent_HAECA_ID.csv")),
    row.names = FALSE
  )
  
  # ---- Identify genes common in senescent HUVECs ----
  genes_HUV <- read.csv("path_to_HUVEC_young_vs_aged.csv") #DGEA result, comparing early vs. late passage HUVECs (can be swapped with any other comparison of choice)
  genes_sign_HUV <- genes_HUV %>%
    filter(baseMean > 30, log2FoldChange < -0.35, padj < 0.05)
  
  # Overlap with markers
  genes_sign_HUV2 <- genes_sign_HUV %>%
    filter(X %in% markers_filtered$gene)
  
  write.csv(
    genes_sign_HUV2,
    file = file.path(output_dir, paste0(tissue, "_genes_sign_HUV2.csv")),
    row.names = FALSE
  )
}

# ---- Cross-Tissue Robust Genes ----
setwd(output_dir)
files <- list.files(pattern = "genes_sign_HUV2.csv$")
gene_lists <- lapply(files, function(file) {
  read.csv(file)$X
})

gene_counts <- table(unlist(gene_lists)) %>%
  as.data.frame() %>%
  arrange(desc(Freq))

common_genes <- subset(gene_counts, Freq >= tissue_threshold)

# Save final robust gene list
write.csv(
  common_genes,
  file = file.path(output_dir, "common_senescence_genes_across_tissues.csv"),
  row.names = FALSE
)
